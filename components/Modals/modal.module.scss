@import 'vars';
@import 'mixins';

.modalCnt {
    position: absolute;
    background-color: $bg-5;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: 1;

    .modal {
        @include flex($wrap: wrap);
        position: fixed;
        top: 50%;
        left: 50%;
        max-width: 600px;
        padding: 32px 16px;
        background-color: $bg-8;
        box-shadow: inset 0 0 200px $fg-1;
        border-radius: 8px;
        transform: translate(-50%, -50%);

        .question {
            @include flex($wrap: wrap);
            flex-basis: 100%;
            text-align: center;
            user-select: none;

            span {
                flex-basis: 100%;
            }

            span:nth-child(1) {
                font-size: 20px;
            }

            span:nth-child(2) {
                color: $mid-75;
            }
        }

        .inputCnt {
            @include flex($wrap: wrap);
            flex-basis: 80%;
            margin-top: 10px;

            .input {
                width: 70%;
                padding: 4px 8px;
                background-color: $fg-1;
                border: 1px solid transparent;
                border-radius: 4px;
                transition: 0.2s;

                &:hover {
                    border: 1px solid $primary-5;
                }

                &:focus {
                    border: 1px solid $primary;
                    box-shadow: 0 0 5px $primary;
                }
            }

            .errors {
                flex-basis: 70%;
                margin-top: 8px;
                padding: 0 8px;
                background-color: $red-1;
                border: 1px solid $red;
                border-radius: 4px;
                user-select: none;
            }

            &.errors {
                .input {
                    &:hover {
                        border: 1px solid $red-6;
                    }

                    &:focus {
                        border: 1px solid $red;
                        box-shadow: 0 0 5px $red-5;
                    }
                }
            }
        }

        .btns {
            @include flex($gap: 30px);
            margin-top: 20px;

            button {
                @include flex($gap: 5px);
                @include loader();
                padding: 4px 16px;
                border-radius: 4px;
                transition: 0.2s;
                background-color: $fg-1;
                border: 1px solid $fg;

                &:hover {
                    background-color: $fg-2;
                }

                &:active {
                    transition: 0s;
                    background-color: $fg-3;
                }

                &:disabled {
                    color: $mid;
                    filter: grayscale(1);

                    &.successfull {
                        filter: grayscale(0);
                        background-color: $green-1;
                        border: 1px solid $green;
                        color: $fg;
                    }
                }
            }

            button:nth-child(2) {
                background-color: $primary-1;
                border: 1px solid $primary;

                &:hover {
                    background-color: $primary-2;
                }

                &:active {
                    transition: 0s;
                    background-color: $primary-3;
                }
            }
        }
    }
}

@media screen and (max-width: 800px) {
    .modalCnt {
        .modal {
            .inputCnt {
                flex-basis: 100%;

                .input {
                    width: 100%;
                }

                .errors {
                    flex-basis: 100%;
                }
            }

            .btns {
                flex-basis: 100%;
                justify-content: space-between;

                button {
                    flex-basis: 40%;
                }
            }
        }
    }
}

@media screen and (max-width: 700px) {
    .modalCnt {
        .modal {
            left: 25%;
            transform: translate(-15%, -50%);
        }
    }
}